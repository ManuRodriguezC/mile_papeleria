---
import Layout from "@layouts/Layout.astro";
import { todosLosProductos } from "@lib/tiposProductos";
import Product from "@components/Product.astro";
import {
  productos,
  generoPorProducto,
  tiposProducto,
} from "@lib/tiposProductos";

export const prerender = true;
const PRODUCTS_FOR_PAGE = 21;

export function getStaticPaths() {
  const PRODUCTS_FOR_PAGE = 21;
  const paths = [];

  for (const producto of productos) {
    for (const genero of generoPorProducto[producto]) {
      for (const tipo of tiposProducto[producto]) {
        if (genero === "para-todos") {
          if (tipo === "todos-los-productos") {
            const maxPages = Math.ceil(
              todosLosProductos.length / PRODUCTS_FOR_PAGE
            );
            for (let page = 1; page <= maxPages; page++) {
              paths.push({
                params: { producto, genero, tipo, page: String(page) },
              });
            }
          } else {
            const filteredProducts = todosLosProductos.filter(
              (product) => product.type === tipo
            );
            const maxPages = Math.ceil(
              filteredProducts.length / PRODUCTS_FOR_PAGE
            );
            for (let page = 1; page <= maxPages; page++) {
              paths.push({
                params: { producto, genero, tipo, page: String(page) },
              });
            }
          }
        } else {
          const filteredProducts = todosLosProductos.filter(
            (product) => product.gender === genero
          );
          if (tipo === "todos-los-productos") {
            const maxPages = Math.ceil(
              filteredProducts.length / PRODUCTS_FOR_PAGE
            );
            for (let page = 1; page <= maxPages; page++) {
              paths.push({
                params: { producto, genero, tipo, page: String(page) },
              });
            }
          } else {
            const filteredProductsByType = filteredProducts.filter(
              (product) => product.type === tipo
            );
            const maxPages = Math.ceil(
              filteredProductsByType.length / PRODUCTS_FOR_PAGE
            );
            for (let page = 1; page <= maxPages; page++) {
              paths.push({
                params: { producto, genero, tipo, page: String(page) },
              });
            }
          }
        }
      }
    }
  }
  return paths;
}

const { params } = Astro;

const producto = params.producto;
const genero = params.genero || "para-todos";
const tipo = params.tipo || "todos-los-productos";
const page = Number(params.page) || 1;

// Buscar genero y determinar la lista
let listaProductos = [];
listaProductos = todosLosProductos.filter((prod) => prod.clase === producto);

// Filtra por genero
const filteredProducts =
  genero === "para-todos"
    ? listaProductos
    : listaProductos.filter((prod) => prod.gender === genero);

const filteredProductsByType =
  tipo === "todos-los-productos"
    ? filteredProducts
    : filteredProducts.filter((prod) => prod.type === tipo);

const numPages = Math.ceil(filteredProductsByType.length / PRODUCTS_FOR_PAGE);

if (page > numPages || page < 1) {
  return Astro.redirect(`/productos/${producto}/${genero}/${tipo}/1`, 301);
}

const listProductos = filteredProductsByType.slice(
  (page - 1) * PRODUCTS_FOR_PAGE,
  page * PRODUCTS_FOR_PAGE
);

const listGeneros = generoPorProducto[producto];
const listTipos = tiposProducto[producto];

function capitalize(text: string) {
  if (!text) return "";
  const setText = text.replaceAll("-", " ");
  return setText.charAt(0).toUpperCase() + setText.slice(1);
}
---

<Layout>
  <div class="flex flex-col justify-center items-center py-5 px-10">
    <div id="subnav" class="w-full px-8 py-2 rounded-3xl bg-purple-200 fixed top-0">
      <div class="w-full flex flex-row justify-between items-center">
        <div class="flex flex-row items-center gap-4">
          <h2 class="text-xl border-r-2 border-purple-900 pr-4">
            {producto.toUpperCase()}
          </h2>
          <div class="flex flex-col gap-2">
            <ul>
              {listGeneros.map((gen) => (
                <li class="inline-block mr-4">
                  <a
                    href={`/productos/${producto}/${gen}/${tipo}/1`}
                    class={`text-lg font-semibold text-purple-900 hover:underline
                      ${gen === genero && "bg-white px-2 rounded-lg font-bold border-2 border-purple-900 text-xl"}`}
                  >
                    {capitalize(gen)}
                  </a>
                </li>
              ))}
            </ul>
            <ul>
              {listTipos.map((type) => (
                <li class="inline-block mr-4">
                  <a
                    href={`/productos/${producto}/${genero}/${type}/1`}
                    class={`text-lg font-semibold text-purple-900 hover:underline 
                      ${type === tipo && "bg-white px-2 rounded-lg font-bold border-2 border-purple-900 text-xl"}`}
                  >
                    {capitalize(type)}
                  </a>
                </li>
              ))}
            </ul>
          </div>
        </div> 
        <div>
          <p class="italic">
            Numero de productos: {filteredProductsByType.length}
          </p>
          <p>Pagina: {page} de {numPages}</p>
          <div>
            <a
              href={page <= 1
                ? "#"
                : `/productos/${producto}/${genero}/${tipo}/${page - 1}`}
              onclick={page <= 1 ? "event.preventDefault();" : undefined}
              class={`text-blue-500 hover:underline ${page <= 1 && "cursor-not-allowed opacity-50 pointer-events-none"}`}
            >
              Anterior
            </a>
            <span class="mx-2">|</span>
            <a
              onclick={page >= numPages ? "event.preventDefault();" : undefined}
              href={`/productos/${producto}/${genero}/${tipo}/${Number(page) + 1}`}
              class={`text-blue-500 hover:underline ${page >= numPages && "cursor-not-allowed opacity-50 pointer-events-none"}`}
            >
              Siguiente
            </a>
          </div>
        </div>
      </div>
    </div>
    <div id="products" class="h-screen flex mt-[90px] mb-10">
      <div class="w-full flex flex-wrap gap-5 justify-center items-center">
        {listProductos.map((cuaderno) => <Product {...cuaderno} />)}
      </div>
    </div>
  </div>
</Layout>

<script>
    window.addEventListener('scroll', () => {
        const sub = document.getElementById('subnav');
        if (!sub) return;
        if (window.scrollY > 0) {
            sub.classList.add('mt-[96px]');
            sub.classList.remove('mt-[170px]');
        } else {
            sub.classList.add('mt-[170px]');
            sub.classList.remove('mt-[96px]');
        }
    });
</script>