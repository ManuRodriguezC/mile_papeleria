---
import Layout from '@layouts/Layout.astro';
import { cuadernos } from '@lib/cuadernos';
import Product from '@components/Product.astro';
import { productos, generoPorProducto, tiposProducto } from '@lib/tiposProductos';
import AsideMenu from '@/components/AsideMenu.astro';

export const prerender = true;
const PRODUCTS_FOR_PAGE = 21;

export function getStaticPaths() {
  const PRODUCTS_FOR_PAGE = 21;
  const paths = [];

  for (const producto of productos) {
    for (const genero of generoPorProducto[producto]) {
      for (const tipo of tiposProducto[producto]) {
        if (genero === "para-todos") {
          if (tipo === "todos-los-productos") {
            const maxPages = Math.ceil(cuadernos.length / PRODUCTS_FOR_PAGE);
            for (let page = 1; page <= maxPages; page++) {
              paths.push({ params: { producto, genero, tipo, page: String(page) } });
            }
          } else {
            const filteredProducts = cuadernos.filter(
              (cuaderno) => cuaderno.type === tipo
            );
            const maxPages = Math.ceil(filteredProducts.length / PRODUCTS_FOR_PAGE);
            for (let page = 1; page <= maxPages; page++) {
              paths.push({
                params: { producto, genero, tipo, page: String(page) },
              });
            }
          }
        } else {
          const filteredProducts = cuadernos.filter(
            (cuaderno) => cuaderno.gender === genero
          );
          if (tipo === "todos-los-productos") {
            const maxPages = Math.ceil(filteredProducts.length / PRODUCTS_FOR_PAGE);
            for (let page = 1; page <= maxPages; page++) {
              paths.push({ params: { producto, genero, tipo, page: String(page) } });
            }
          } else {
            const filteredProductsByType = filteredProducts.filter(
              (cuaderno) => cuaderno.type === tipo
            );
            const maxPages = Math.ceil(filteredProductsByType.length / PRODUCTS_FOR_PAGE);
            for (let page = 1; page <= maxPages; page++) {
              paths.push({
                params: { producto, genero, tipo, page: String(page) },
              });
            }
          }
        }
      }
    }
  }
  return paths;
}

const { params } = Astro;

const producto = params.producto;
const genero = params.genero || 'para-todos';
const tipo = params.tipo || 'todos-los-productos';
const page = Number(params.page) || 1;

const filteredProducts = genero === 'para-todos'
  ? cuadernos
  : cuadernos.filter(cuaderno => cuaderno.gender === genero);

const filteredProductsByType = tipo === 'todos-los-productos'
  ? filteredProducts
  : filteredProducts.filter(cuaderno => cuaderno.type === tipo);

const numPages = Math.ceil(filteredProductsByType.length / PRODUCTS_FOR_PAGE);

if (page > numPages || page < 1) {
  return Astro.redirect(`/productos/${producto}/${genero}/${tipo}/1`, 301);
}

const listProductos = filteredProductsByType.slice(
  (page - 1) * PRODUCTS_FOR_PAGE,
  page * PRODUCTS_FOR_PAGE
);

---

<Layout>
  <div class="flex flex-col justify-center items-center py-5 px-10">
    <div class="w-full flex flex-row justify-between">
      <h1 class="font-bold text-2xl">{producto.toUpperCase()} - {genero}- {tipo}</h1>
      <div>
        <p class="italic">Numero de productos: {filteredProductsByType.length}</p>
        <p>Pagina: {page} de {numPages}</p>
        <div>
          <a
            href={page <= 1 ? '#' : `/productos/${producto}/${genero}/${tipo}/${page - 1}`}
            onclick={page <= 1 ? 'event.preventDefault();' : undefined}
            class={`text-blue-500 hover:underline ${page <= 1 && 'cursor-not-allowed opacity-50 pointer-events-none'}`}>
            Anterior
          </a>
          <span class="mx-2">|</span>
          <a
            onclick={page >= numPages ? 'event.preventDefault();' : undefined}
            href={`/productos/${producto}/${genero}/${tipo}/${Number(page) + 1}`}
            class={`text-blue-500 hover:underline ${page >= numPages && 'cursor-not-allowed opacity-50 pointer-events-none'}`}>
            Siguiente
          </a>
        </div>
      </div>
    </div>
    <div class="h-screen flex">
      <AsideMenu />
      <div class="ml-[20%] w-[80%] flex flex-wrap gap-5 justify-center items-center">
        {listProductos.map((cuaderno) => (
          <Product {...cuaderno} />
        ))}
    </div>
  </div>
  </div>
</Layout>
